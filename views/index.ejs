<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>English Conversation Practice</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html, body {
            height: 100%;
            overflow: hidden;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            display: flex;
            flex-direction: column;
        }

        .chat-container {
            max-width: 800px;
            margin: 20px auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            position: relative;
        }

        .chat-header {
            background: #075e54;
            color: white;
            padding: 12px;
            text-align: center;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
        }

        .message {
            margin-bottom: 15px;
            display: flex;
            flex-direction: column;
        }

        .message.user {
            align-items: flex-end;
        }

        .message.ai {
            align-items: flex-start;
        }

        .message-content {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 15px;
            margin: 5px 0;
        }

        .user .message-content {
            background: #dcf8c6;
        }

        .ai .message-content {
            background: #e8e8e8;
        }

        .tip {
            background: #fff3cd;
            color: #856404;
            padding: 10px;
            border-radius: 5px;
            margin-top: 5px;
            font-size: 0.9em;
            border-left: 4px solid #ffc107;
        }

        .tip-box {
            position: fixed;
            bottom: 100px;
            right: 20px;
            width: 300px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 15px;
            display: none;
            z-index: 1000;
        }

        .tip-box.visible {
            display: block;
        }

        .tip-box h3 {
            margin: 0 0 10px 0;
            color: #856404;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .tip-box .close-btn {
            background: none;
            border: none;
            color: #856404;
            cursor: pointer;
            font-size: 1.2em;
            padding: 0;
            margin: 0;
        }

        .tip-box .close-btn:hover {
            color: #666;
        }

        .tip-content {
            font-size: 0.9em;
        }

        .input-container {
            padding: 20px;
            background: white;
            border-top: 1px solid #eee;
        }

        .input-form {
            display: flex;
            gap: 10px;
        }

        input[type="text"] {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 20px;
            outline: none;
        }

        button {
            padding: 10px 20px;
            background: #075e54;
            color: white;
            border: none;
            border-radius: 20px;
            cursor: pointer;
        }

        button:hover {
            background: #128c7e;
        }

        @media (max-width: 600px) {
            .chat-container {
                margin: 0;
                border-radius: 0;
                height: 100%;
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
            }

            .message-content {
                max-width: 85%;
            }

            .tip-box {
                width: calc(100% - 40px);
                bottom: 80px;
            }

            .input-container {
                position: sticky;
                bottom: 0;
                background: white;
                padding: 10px;
                border-top: 1px solid #eee;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <h2>Chat</h2>
        </div>
        <div class="chat-messages" id="chat-messages"></div>
        <div class="input-container">
            <form class="input-form" id="chat-form">
                <input type="text" id="message-input" placeholder="Type your message..." autocomplete="off">
                <button type="submit">Send</button>
            </form>
        </div>
    </div>

    <div class="tip-box" id="tip-box">
        <h3>
            <span>ðŸ’¡ Tip!</span>
            <button class="close-btn" onclick="hideTip()">Ã—</button>
        </h3>
        <div class="tip-content" id="tip-content"></div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const chatForm = document.getElementById('chat-form');
        const messageInput = document.getElementById('message-input');
        const chatMessages = document.getElementById('chat-messages');
        const tipBox = document.getElementById('tip-box');
        const tipContent = document.getElementById('tip-content');

        function addMessage(message, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user' : 'ai'}`;
            
            const contentDiv = document.createElement('div');
            contentDiv.className = 'message-content';
            contentDiv.textContent = message;
            
            messageDiv.appendChild(contentDiv);
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function showTip(tip) {
            tipContent.textContent = tip.replace('Tip!', '').trim();
            tipBox.classList.add('visible');
            
            // Hide tip box after 15 seconds
            setTimeout(() => {
                hideTip();
            }, 15000);
        }

        function hideTip() {
            tipBox.classList.remove('visible');
        }

        chatForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const message = messageInput.value.trim();
            if (message) {
                addMessage(message, true);
                socket.emit('chat message', message);
                messageInput.value = '';
            }
        });

        socket.on('chat response', (response) => {
            addMessage(response);
        });

        socket.on('tip', (tip) => {
            showTip(tip);
        });
    </script>
</body>
</html> 